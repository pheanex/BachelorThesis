#!/bin/bash
DATE=$(date +%Y-%m-%d-%H-%M-%S)
NR_SECS=$1
VM_start=11
VM_end=22
VM_cnt=0
bw=$2

if [[ -z "$NR_SECS" ]] || [[ -z "$bw" ]]
then
	echo "Error: usage: $0 <nr_secs_iperf(t)> <bw in Mbit>"
	exit 1
fi

echo "Seconds count (-t for iperf): $NR_SECS"

# Check every 10 secs for 400 secs if aps are already done or if they still need some time to reconfigure
for i in $(seq 1 40)
do
        sleep 10
        if python AutoWDScheckAPs.py 172.16.40.100 admin private $(seq $VM_start $VM_end | wc -l)
        then
                break
        fi
        if [[ $i == "30" ]]
        then
                echo "APs not reconfigured after 5minutes  => sth must be wrong" >&2
                exit 1
        fi
done
echo "All APs are running" >&2

echo "Update iperf script in vms" >&2
for i in $(seq $VM_start $VM_end)
do
	cp iperf-parallel-servers iperf-multiple-clients /var/lib/vz/root/$i/root/
done

echo "Starting parallel iperf listeners in vms" >&2
for i in $(seq $VM_start $VM_end)
do
	vzctl exec $i "cd /root; ./iperf-parallel-servers $VM_start $VM_end $i"
done

echo "Starting traffic throughput test in vms" >&2
for i in $(seq $VM_start $VM_end)
do
	vzctl exec $i "sleep 0.$RANDOM; cd /root; ./iperf-multiple-clients $VM_start $VM_end $i $NR_SECS $bw"
done

echo "Wait for test to finish about (${NR_SECS}s)" >&2
sleep $NR_SECS
sleep 10

echo "Stopping parallel iperf listeners in vms" >62
for i in $(seq $VM_start $VM_end)
do
	vzctl exec $i "killall iperf"
done

echo "Copying data from vms to archive" >&2
testdir="AutoWDStest_bw_${DATE}_${NR_SECS}_${bw}"
mkdir "$testdir"
cd "$testdir"
for i in $(seq $VM_start $VM_end)
do
	mkdir $i
	cd $i
	cp -R /var/lib/vz/root/${i}/root/iperf-serverlog_172.16.40.2* .
	cp -R /var/lib/vz/root/${i}/root/iperf-clientlog_172.16.40.2* .
	cd ..
done
cd ..
