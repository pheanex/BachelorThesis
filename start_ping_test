#!/bin/bash
DATE=$(date +%Y-%m-%d-%H-%M-%S)
NR_PACKETS=$1
VM_start=11
VM_end=22
VM_cnt=0
psize=$2

if [[ -z "$NR_PACKETS" ]] || [[ -z "$psize" ]]
then
	echo "Error: usage: $0 <nr_packets> <packet_size>"
	echo "packetsize max: 1472 normal: 56"
	exit 1
fi

echo "Number of packets: $NR_PACKETS"
echo "Waiting 40 Seconds, then starting checking if APs are still running" >&2
sleep 40

echo "Check every 10 secs for 400 secs if aps are already done or if they still need some time to reconfigure" >&2
for i in $(seq 1 40)
do
	sleep 10
	if python AutoWDScheckAPs.py 172.16.40.100 admin private $(seq $VM_start $VM_end | wc -l)
	then
		break
	fi
	if [[ $i == "30" ]]
	then
		echo "APs not reconfigured after 5min seconds => sth must be wrong" >&2
		exit 1
	fi
done
echo "All APs are in state running" >&2

sed -i "s/^NUM_PINGS_ORIG=.*/NUM_PINGS_ORIG=$NR_PACKETS/" bping
sed -i "s/^PACKET_SIZE=.*/PACKET_SIZE=$psize/" bping

echo "Update bping scripts in vms" >&2
for i in $(seq $VM_start $VM_end)
do
	cp bping /var/lib/vz/root/$i/root/
done

echo "Start randomly delayed tests on vms" >&2
for i in $(seq $VM_start $VM_end)
do
	let VM_cnt++
	vzctl exec $i "sleep 0.$RANDOM; /root/bping" &
done

echo "Wait for all backgroundjobs to finish" >&2
wait

echo "Starting avg calculation and archiving" >&2

overall_overall_ms_sum=0
overall_overall_pl_sum=0
testdir="AutoWDStest_ping_${DATE}_${NR_PACKETS}_${psize}"
mkdir "$testdir"
cd "$testdir"
touch test_report
for i in $(seq $VM_start $VM_end)
do
	mkdir $i
	cd $i
	cp -R /var/lib/vz/root/${i}/root/ping_* .
	# calc average over values for ${i}
	for file in $(ls ping*[[:digit:]])
	do
		ms_avg=$(awk '{ sum += $2; num_lines += 1 } END { avg=sum/num_lines; print avg }' "$file")
		echo "$ms_avg" > "${file}_ms_avg"
		#echo "VM${i} $file avg: $ms_avg"
	done
	#calc overall ms average
	for file in $(ls *_ms_avg)
	do
		ms_count=0
		ms_sum=0
		for file in $(ls *_ms_avg)
		do
			ms_sum="$(echo "${ms_sum}+$(cat $file)" | bc -l)"
			let ms_count++
		done
	done
	overall_ms_avg=$(echo "${ms_sum}/${ms_count}" | bc -l)
	echo $overall_ms_avg > overall_ms_avg
	echo -n "VM${i} overall ms-avg/pl-avg: $overall_ms_avg" | tee -a ../test_report
	overall_overall_ms_sum=$(echo $overall_overall_ms_sum + $overall_ms_avg | bc -l)

	#calc overall packetloss
	pl_cnt=0
	pl_sum=0
	for file in $(ls *_packetloss)
	do
		let pl_cnt++
		pl_sum="$(echo "${pl_sum} + $(cat $file)" | bc -l)"
	done
	overall_pl_avg="$(echo "${pl_sum}/${pl_cnt}" | bc -l)"
	echo $overall_pl_avg > overall_pl_avg
	echo -e "\t$overall_pl_avg"  | tee -a ../test_report
	overall_overall_pl_sum=$(echo $overall_overall_pl_sum + $overall_pl_avg | bc -l)
	cd ..
done
cd ..
overall_overall_ms_avg=$(echo "$overall_overall_ms_sum / $VM_cnt" | bc -l)
overall_overall_pl_avg=$(echo "$overall_overall_pl_sum / $VM_cnt" | bc -l)
echo $overall_overall_ms_avg > overall_overall_ms_avg
echo $overall_overall_pl_avg > overall_overall_pl_avg
echo "Overall ms-avg: $overall_overall_ms_avg" | tee -a $testdir/test_report
echo "Overall pl-avg: $overall_overall_pl_avg" | tee -a $testdir/test_report
